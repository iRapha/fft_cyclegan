# FourierGAN
python train.py --dataroot ./datasets/maps --name maps_fullyfouriergan --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4

# Fully FourierGAN
python train.py --dataroot ./datasets/maps --name maps_fullyfouriergan --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_and_complex

# Power FourierGAN
python train.py --dataroot ./datasets/maps --name maps_powerfouriergan --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=power_spectrum

# FourierGAN small LambdaA
python train.py --dataroot ./datasets/maps --name maps_fouriergan_smallLA --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_only --lambda_A=1 

# FourierGAN small LambdaA and LambdaB
python train.py --dataroot ./datasets/maps --name maps_fouriergan_smallLALB --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_only --lambda_A=1 --lambda_B=1

# CycleGAN small LambdaA
python train.py --dataroot ./datasets/maps --name maps_cyclegan_smallLA --model cycle_gan --no_dropout --display_id 0 --batchSize 4 --lambda_A=1

# CycleGAN small LambdaA and LambdaB
python train.py --dataroot ./datasets/maps --name maps_cyclegan_smallLALB --model cycle_gan --no_dropout --display_id 0 --batchSize 4 --lambda_A=1 --lambda_B=1

# Fully FourierGAN with small LambdaA
python train.py --dataroot ./datasets/maps --name maps_fullyfouriergan_smallLA --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_and_complex --lambda_A=1

# FourierGAN lambdaA5
python train.py --dataroot ./datasets/maps --name maps_fouriergan_LA5 --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_only --lambda_A=5

# CycleGAN lambdaA5
python train.py --dataroot ./datasets/maps --name maps_cyclegan_LA5 --model cycle_gan --no_dropout --display_id 0 --batchSize 4 --lambda_A=5

# Purely FFT (real and complex)
python train.py --dataroot ./datasets/maps --name maps_fouriergan_purefft --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_complex_pure

# BatchNormGAN
python train.py --dataroot ./datasets/maps --name maps_bngan --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=batch_norm

# Pure Fully Fourier ImageGAN
python train.py --dataroot ./datasets/maps --name maps_purefullyfourierimagegan --model cycle_gan --no_dropout --display_id 0 --which_model_netD fourier --batchSize 4 --fourier_mode=real_complex_pure --n_layers_D=5

# VariationalG GAN
python train.py --dataroot ./datasets/maps --name maps_variationalggan --model cycle_gan --no_dropout --display_id 0 --which_model_netG variational_resnet_9blocks --batchSize 4

# CycleGAN no Identity
alert python train.py --dataroot ./datasets/maps --name maps_cyclegan_noidentity --model cycle_gan --no_dropout --batchSize 10 --nThreads 12 --display_id 0 --lambda_identity 0; sudo shutdown -h now

# CycleGAN with UNet256
python train.py --dataroot ./datasets/maps --name maps_cyclegan_unet256 --model cycle_gan --no_dropout --display_id 0 --batchSize 16 --nThread 18 --which_model_netG=unet_256

# CycleGAN with UNet128
python train.py --dataroot ./datasets/maps --name maps_cyclegan_unet128 --model cycle_gan --no_dropout --display_id 0 --batchSize 24 --nThreads 26 --which_model_netG=unet_128

# CycleGAN with UNet256 but without skip connections
python train.py --dataroot ./datasets/maps --name maps_cyclegan_unet256_noskips --model cycle_gan --no_dropout --display_id 0 --batchSize 32 --nThreads 34 --which_model_netG=unet_256_noskips

# CycleGAN with Resnet9 but without skip connections
python train.py --dataroot ./datasets/maps --name maps_cyclegan_resnet9_noskips --model cycle_gan --no_dropout --display_id 0 --batchSize 4 --nThreads 6 --which_model_netG=resnet_9blocks_noskips

# ReCycleGAN (with resnet9 whose skips have stopgrad if cycleloss)
python train.py --dataroot ./datasets/maps --name maps_cyclegan_recycleskips --model recycle_gan --no_dropout --display_id 0 --batchSize 4 --nThreads 6 --which_model_netG=resnet_9blocks_recycle_skips

# TV GAN
python train.py --dataroot ./datasets/maps --name maps_tv_test --model tv_gan --no_dropout --display_id 0 --batchSize 8 --nThreads 10

# TEST
python test.py --dataroot ./datasets/maps --name <exp name> --model cycle_gan --phase test --no_dropout --which_model_netD fourier --fourier_mode=<which mode> [MORE OPTIONS]
